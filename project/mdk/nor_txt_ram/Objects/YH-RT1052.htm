<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\nor_txt_ram\Objects\YH-RT1052.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\nor_txt_ram\Objects\YH-RT1052.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Aug 06 10:13:33 2020
<BR><P>
<H3>Maximum Stack Usage =        832 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; GTP_TouchProcess &rArr; Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">BusFault_Handler</a><BR>
 <LI><a href="#[6]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">DebugMon_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[86]">ACMP1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[87]">ACMP2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[88]">ACMP3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[89]">ACMP4_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[4e]">ADC1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[4f]">ADC2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[84]">ADC_ETC_ERROR_IRQ_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[81]">ADC_ETC_IRQ0_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[82]">ADC_ETC_IRQ1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[83]">ADC_ETC_IRQ2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[48]">ANATOP_EVENT0_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[49]">ANATOP_EVENT1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[4a]">ANATOP_TAMP_LOW_HIGH_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[4b]">ANATOP_TEMP_PANIC_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[42]">BEE_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d0]">CAN1_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[2f]">CAN1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d1]">CAN2_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[30]">CAN2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[6a]">CCM_1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[6b]">CCM_2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1e]">CORE_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[36]">CSI_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3c]">CSU_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1c]">CTI0_ERROR_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1d]">CTI1_ERROR_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[e4]">Command_Clear_Palette</a> from palette.o(i.Command_Clear_Palette) referenced from palette.o(i.Touch_Button_Init)
 <LI><a href="#[e6]">Command_Select_Brush</a> from palette.o(i.Command_Select_Brush) referenced from palette.o(i.Touch_Button_Init)
 <LI><a href="#[e2]">Command_Select_Color</a> from palette.o(i.Command_Select_Color) referenced from palette.o(i.Touch_Button_Init)
 <LI><a href="#[50]">DCDC_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3d]">DCP_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3e]">DCP_VMI_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[af]">DMA0_DMA16_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[b]">DMA0_DMA16_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b9]">DMA10_DMA26_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[15]">DMA10_DMA26_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ba]">DMA11_DMA27_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[16]">DMA11_DMA27_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[bb]">DMA12_DMA28_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[17]">DMA12_DMA28_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[bc]">DMA13_DMA29_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[18]">DMA13_DMA29_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[bd]">DMA14_DMA30_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[19]">DMA14_DMA30_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[be]">DMA15_DMA31_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[1a]">DMA15_DMA31_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b0]">DMA1_DMA17_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[c]">DMA1_DMA17_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b1]">DMA2_DMA18_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[d]">DMA2_DMA18_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b2]">DMA3_DMA19_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[e]">DMA3_DMA19_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b3]">DMA4_DMA20_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[f]">DMA4_DMA20_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b4]">DMA5_DMA21_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[10]">DMA5_DMA21_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b5]">DMA6_DMA22_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[11]">DMA6_DMA22_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b6]">DMA7_DMA23_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[12]">DMA7_DMA23_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b7]">DMA8_DMA24_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[13]">DMA8_DMA24_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[b8]">DMA9_DMA25_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[14]">DMA9_DMA25_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[bf]">DMA_ERROR_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[1b]">DMA_ERROR_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[de]">DbgConsole_RelocateLog</a> from fsl_debug_console.o(i.DbgConsole_RelocateLog) referenced from fsl_debug_console.o(i.DbgConsole_Printf)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ab]">DefaultISR</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[ab]">DefaultISR</a> from startup_mimxrt1052.o(.text) referenced 79 times from startup_mimxrt1052.o(RESET)
 <LI><a href="#[e3]">Draw_Clear_Button</a> from palette.o(i.Draw_Clear_Button) referenced from palette.o(i.Touch_Button_Init)
 <LI><a href="#[e1]">Draw_Color_Button</a> from palette.o(i.Draw_Color_Button) referenced from palette.o(i.Touch_Button_Init)
 <LI><a href="#[e5]">Draw_Shape_Button</a> from palette.o(i.Draw_Shape_Button) referenced from palette.o(i.Touch_Button_Init)
 <LI><a href="#[8c]">ENC1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[8d]">ENC2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[8e]">ENC3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[8f]">ENC4_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[dd]">ENET_1588_Timer_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[7e]">ENET_1588_Timer_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[dc]">ENET_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[7d]">ENET_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[69]">EWM_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d7]">FLEXIO1_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[65]">FLEXIO1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d8]">FLEXIO2_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[66]">FLEXIO2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[31]">FLEXRAM_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d9]">FLEXSPI_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[77]">FLEXSPI_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[6c]">GPC_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[5b]">GPIO1_Combined_0_15_IRQHandler</a> from bsp_i2c_touch.o(i.GPIO1_Combined_0_15_IRQHandler) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[5c]">GPIO1_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[53]">GPIO1_INT0_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[54]">GPIO1_INT1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[55]">GPIO1_INT2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[56]">GPIO1_INT3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[57]">GPIO1_INT4_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[58]">GPIO1_INT5_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[59]">GPIO1_INT6_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[5a]">GPIO1_INT7_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[5d]">GPIO2_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[5e]">GPIO2_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[5f]">GPIO3_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[60]">GPIO3_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[61]">GPIO4_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[62]">GPIO4_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[63]">GPIO5_Combined_0_15_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[64]">GPIO5_Combined_16_31_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[34]">GPR_IRQ_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[6f]">GPT1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[70]">GPT2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[df]">I2C_Master_Callback</a> from bsp_i2c_touch.o(i.I2C_Master_Callback) referenced from bsp_i2c_touch.o(i.GTP_I2C_ModeInit)
 <LI><a href="#[32]">KPP_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[35]">LCDIF_IRQHandler</a> from bsp_lcd.o(i.LCDIF_IRQHandler) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c8]">LPI2C1_DriverIRQHandler</a> from fsl_lpi2c.o(i.LPI2C1_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[27]">LPI2C1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c9]">LPI2C2_DriverIRQHandler</a> from fsl_lpi2c.o(i.LPI2C2_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[28]">LPI2C2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ca]">LPI2C3_DriverIRQHandler</a> from fsl_lpi2c.o(i.LPI2C3_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[29]">LPI2C3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[cb]">LPI2C4_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[2a]">LPI2C4_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[e0]">LPI2C_MasterTransferHandleIRQ</a> from fsl_lpi2c.o(i.LPI2C_MasterTransferHandleIRQ) referenced from fsl_lpi2c.o(i.LPI2C_MasterTransferCreateHandle)
 <LI><a href="#[cc]">LPSPI1_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[2b]">LPSPI1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[cd]">LPSPI2_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[2c]">LPSPI2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ce]">LPSPI3_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[2d]">LPSPI3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[cf]">LPSPI4_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[2e]">LPSPI4_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c0]">LPUART1_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART1_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[1f]">LPUART1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c1]">LPUART2_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART2_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[20]">LPUART2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c2]">LPUART3_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART3_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[21]">LPUART3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c3]">LPUART4_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART4_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[22]">LPUART4_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c4]">LPUART5_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART5_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[23]">LPUART5_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c5]">LPUART6_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART6_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[24]">LPUART6_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c6]">LPUART7_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART7_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[25]">LPUART7_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[c7]">LPUART8_DriverIRQHandler</a> from fsl_lpuart.o(i.LPUART8_DriverIRQHandler) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[26]">LPUART8_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[aa]">NMI_WAKEUP_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[85]">PIT_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[71]">PWM1_0_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[72]">PWM1_1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[73]">PWM1_2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[74]">PWM1_3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[75]">PWM1_FAULT_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[94]">PWM2_0_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[95]">PWM2_1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[96]">PWM2_2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[97]">PWM2_3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[98]">PWM2_FAULT_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[99]">PWM3_0_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[9a]">PWM3_1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[9b]">PWM3_2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[9c]">PWM3_3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[9d]">PWM3_FAULT_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[9e]">PWM4_0_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[9f]">PWM4_1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a0]">PWM4_2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a1]">PWM4_3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a2]">PWM4_FAULT_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[37]">PXP_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[68]">RTWDOG_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[6e]">Reserved115_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[76]">Reserved123_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[8a]">Reserved143_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[8b]">Reserved144_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a3]">Reserved168_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a4]">Reserved169_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a5]">Reserved170_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a6]">Reserved171_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a7]">Reserved172_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a8]">Reserved173_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3f]">Reserved68_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[51]">Reserved86_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[52]">Reserved87_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d2]">SAI1_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[43]">SAI1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d3]">SAI2_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[44]">SAI2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d4]">SAI3_RX_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[45]">SAI3_RX_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d5]">SAI3_TX_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[46]">SAI3_TX_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[78]">SEMC_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a9]">SJC_ARM_DEBUG_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[41]">SJC_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[39]">SNVS_HP_WRAPPER_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3a]">SNVS_HP_WRAPPER_TZ_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[3b]">SNVS_LP_WRAPPER_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[d6]">SPDIF_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[47]">SPDIF_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[6d]">SRC_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from bsp_systick.o(i.SysTick_Handler) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ad]">SystemInit</a> from system_mimxrt1052.o(i.SystemInit) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[90]">TMR1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[91]">TMR2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[92]">TMR3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[93]">TMR4_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[40]">TRNG_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[33]">TSC_DIG_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[7c]">USB_OTG1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[7b]">USB_OTG2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[4c]">USB_PHY1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[4d]">USB_PHY2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[da]">USDHC1_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[79]">USDHC1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[db]">USDHC2_DriverIRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[7a]">USDHC2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[67]">WDOG1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[38]">WDOG2_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[7f]">XBAR1_IRQ_0_1_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[80]">XBAR1_IRQ_2_3_IRQHandler</a> from startup_mimxrt1052.o(.text) referenced from startup_mimxrt1052.o(RESET)
 <LI><a href="#[ae]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mimxrt1052.o(.text)
 <LI><a href="#[e7]">fputc</a> from fsl_debug_console.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[ac]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[ae]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[17b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[e8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[f5]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[17c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[17d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[17e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[17f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[180]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DMA0_DMA16_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA1_DMA17_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA2_DMA18_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA3_DMA19_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA4_DMA20_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA5_DMA21_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA6_DMA22_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA7_DMA23_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA8_DMA24_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA9_DMA25_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA10_DMA26_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA11_DMA27_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA12_DMA28_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA13_DMA29_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA14_DMA30_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA15_DMA31_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>LPUART2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>LPUART3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LPUART4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LPUART5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>LPUART6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>LPUART7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>LPUART8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>LPI2C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>LPI2C2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>LPI2C3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>LPI2C4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>LPSPI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>LPSPI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>LPSPI3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>LPSPI4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SAI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SAI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>SAI3_RX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SAI3_TX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SPDIF_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>FLEXIO1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>FLEXIO2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>FLEXSPI_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>USDHC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>USDHC2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>ENET_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>ENET_1588_Timer_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>ACMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>ACMP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>ACMP4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>ADC_ETC_ERROR_IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>ADC_ETC_IRQ0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>ADC_ETC_IRQ1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>ADC_ETC_IRQ2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ANATOP_EVENT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ANATOP_EVENT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ANATOP_TAMP_LOW_HIGH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>ANATOP_TEMP_PANIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>BEE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>CAN1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>CAN2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>CCM_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CCM_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CORE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CSU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>CTI0_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CTI1_ERROR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DCDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DCP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DCP_VMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[af]"></a>DMA0_DMA16_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>DMA10_DMA26_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>DMA11_DMA27_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>DMA12_DMA28_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>DMA13_DMA29_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>DMA14_DMA30_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>DMA15_DMA31_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>DMA1_DMA17_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>DMA2_DMA18_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>DMA3_DMA19_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>DMA4_DMA20_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>DMA5_DMA21_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>DMA6_DMA22_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>DMA7_DMA23_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>DMA8_DMA24_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>DMA9_DMA25_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>DMA_ERROR_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_mimxrt1052.o(RESET)
<LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>ENC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>ENC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>ENC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>ENC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>ENET_1588_Timer_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>ENET_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>EWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>FLEXIO1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>FLEXIO2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>FLEXRAM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d9]"></a>FLEXSPI_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>GPC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>GPIO1_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>GPIO1_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>GPIO1_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>GPIO1_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>GPIO1_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>GPIO1_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>GPIO1_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>GPIO1_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>GPIO1_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPIO2_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>GPIO2_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIO3_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>GPIO3_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GPIO4_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>GPIO4_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>GPIO5_Combined_0_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>GPIO5_Combined_16_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>GPR_IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>GPT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>GPT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>KPP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>LPI2C4_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>LPSPI1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>LPSPI2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>LPSPI3_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>LPSPI4_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>NMI_WAKEUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>PWM1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>PWM1_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>PWM1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>PWM1_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>PWM1_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>PWM2_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>PWM2_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>PWM2_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>PWM2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>PWM2_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>PWM3_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>PWM3_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>PWM3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>PWM3_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>PWM3_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>PWM4_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>PWM4_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>PWM4_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>PWM4_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>PWM4_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>PXP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>RTWDOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>Reserved115_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>Reserved123_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>Reserved143_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>Reserved144_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>Reserved168_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>Reserved169_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>Reserved170_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>Reserved171_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>Reserved172_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>Reserved173_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>Reserved68_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>Reserved86_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>Reserved87_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>SAI1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>SAI2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>SAI3_RX_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>SAI3_TX_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>SEMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>SJC_ARM_DEBUG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SJC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SNVS_HP_WRAPPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SNVS_HP_WRAPPER_TZ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SNVS_LP_WRAPPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>SPDIF_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>SRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>TMR4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TSC_DIG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>USB_OTG1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>USB_OTG2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USB_PHY1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USB_PHY2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>USDHC1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>USDHC2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>WDOG1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>WDOG2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>XBAR1_IRQ_0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>XBAR1_IRQ_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mimxrt1052.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[ea]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertRadixNumToString
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[ed]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertRadixNumToString
</UL>

<P><STRONG><a name="[181]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[15c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferNonBlocking
</UL>

<P><STRONG><a name="[182]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[185]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferCreateHandle
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[187]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[168]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
</UL>

<P><STRONG><a name="[f1]"></a>__aeabi_l2d</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, dfltl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_l2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertFloatRadixNumToString
</UL>

<P><STRONG><a name="[f3]"></a>__aeabi_d2lz</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, dfixl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2lz
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertFloatRadixNumToString
</UL>

<P><STRONG><a name="[188]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ec]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2lz
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[189]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2lz
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[18a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[f2]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
</UL>

<P><STRONG><a name="[177]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[18c]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[18d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>BOARD_BootClockRUN</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, clock_config.o(i.BOARD_BootClockRUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BOARD_BootClockRUN &rArr; CLOCK_SetMux
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitSysPll
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitArmPll
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetMux
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17a]"></a>BOARD_ConfigMPU</STRONG> (Thumb, 392 bytes, Stack size 36 bytes, board.o(i.BOARD_ConfigMPU))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BOARD_ConfigMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>BOARD_DebugConsoleSrcFreq</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, board.o(i.BOARD_DebugConsoleSrcFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BOARD_DebugConsoleSrcFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[fe]"></a>BOARD_InitDebugConsole</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, board.o(i.BOARD_InitDebugConsole))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; LOG_Init &rArr; IO_Init &rArr; LPUART_Init &rArr; LPUART_GetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[100]"></a>BOARD_InitPins</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, pin_mux.o(i.BOARD_InitPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BOARD_InitPins &rArr; IOMUXC_SetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[102]"></a>CLOCK_GetFreq</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_GetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CLOCK_GetFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOscFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Tmr_Delay_US
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_ModeInit
</UL>

<P><STRONG><a name="[fc]"></a>CLOCK_GetPllFreq</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, fsl_clock.o(i.CLOCK_GetPllFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOscFreq
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetUsb1PfdFreq
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
</UL>

<P><STRONG><a name="[105]"></a>CLOCK_GetSysPfdFreq</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_GetSysPfdFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
</UL>

<P><STRONG><a name="[104]"></a>CLOCK_GetUsb1PfdFreq</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_GetUsb1PfdFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CLOCK_GetUsb1PfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[f8]"></a>CLOCK_InitArmPll</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_InitArmPll))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[f9]"></a>CLOCK_InitSysPll</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_InitSysPll))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[14f]"></a>CLOCK_InitVideoPll</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_InitVideoPll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_InitVideoPll
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitClock
</UL>

<P><STRONG><a name="[108]"></a>CPU_TS_TmrInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, core_delay.o(i.CPU_TS_TmrInit))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Tmr_Delay_US
</UL>

<P><STRONG><a name="[107]"></a>CPU_TS_Tmr_Delay_US</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, core_delay.o(i.CPU_TS_Tmr_Delay_US))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CPU_TS_Tmr_Delay_US &rArr; CLOCK_GetFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_ResetChip
</UL>

<P><STRONG><a name="[ff]"></a>DbgConsole_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fsl_debug_console.o(i.DbgConsole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DbgConsole_Init &rArr; LOG_Init &rArr; IO_Init &rArr; LPUART_Init &rArr; LPUART_GetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[110]"></a>DbgConsole_Printf</STRONG> (Thumb, 40 bytes, Stack size 152 bytes, fsl_debug_console.o(i.DbgConsole_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Up
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Down
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Timeout_Callback
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
</UL>

<P><STRONG><a name="[11a]"></a>Draw_Trail</STRONG> (Thumb, 344 bytes, Stack size 32 bytes, palette.o(i.Draw_Trail))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Draw_Trail &rArr; LCD_DrawUniLineCircle &rArr; LCD_DrawFullCircle &rArr; LCD_DrawCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullCircle
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLineCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Down
</UL>

<P><STRONG><a name="[11f]"></a>ELCDIF_Reset</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, fsl_elcdif.o(i.ELCDIF_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ELCDIF_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[11c]"></a>ELCDIF_RgbModeInit</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, fsl_elcdif.o(i.ELCDIF_RgbModeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ELCDIF_RgbModeInit &rArr; ELCDIF_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_Reset
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_GetInstance
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[5b]"></a>GPIO1_Combined_0_15_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp_i2c_touch.o(i.GPIO1_Combined_0_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO1_Combined_0_15_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>GPIO_PinInit</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, fsl_gpio.o(i.GPIO_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinSetInterruptConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLight_ON
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_ResetChip
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_IRQEnable
</UL>

<P><STRONG><a name="[123]"></a>GPIO_PinSetInterruptConfig</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, fsl_gpio.o(i.GPIO_PinSetInterruptConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinSetInterruptConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>

<P><STRONG><a name="[122]"></a>GPIO_PinWrite</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, fsl_gpio.o(i.GPIO_PinWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_ResetChip
</UL>

<P><STRONG><a name="[13d]"></a>GTP_IRQDisable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_i2c_touch.o(i.GTP_IRQDisable))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[12d]"></a>GTP_IRQEnable</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_i2c_touch.o(i.GTP_IRQEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GTP_IRQEnable &rArr; GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[12e]"></a>GTP_Init_Panel</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_touch_gtxx.o(i.GTP_Init_Panel))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = GTP_Init_Panel &rArr; GTP_Get_Info &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_IRQEnable
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[130]"></a>GTP_Read_Version</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, bsp_touch_gtxx.o(i.GTP_Read_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = GTP_Read_Version &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[131]"></a>GTP_ResetChip</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, bsp_i2c_touch.o(i.GTP_ResetChip))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GTP_ResetChip &rArr; CPU_TS_Tmr_Delay_US &rArr; CLOCK_GetFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Tmr_Delay_US
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[132]"></a>GTP_TouchProcess</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_touch_gtxx.o(i.GTP_TouchProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = GTP_TouchProcess &rArr; Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[139]"></a>I2C_ReadBytes</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, bsp_i2c_touch.o(i.I2C_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = I2C_ReadBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferNonBlocking
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Tmr_Delay_US
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Timeout_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>

<P><STRONG><a name="[12f]"></a>I2C_Touch_Init</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, bsp_i2c_touch.o(i.I2C_Touch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = I2C_Touch_Init &rArr; GTP_I2C_ModeInit &rArr; CLOCK_GetFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinMux
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_ModeInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_ResetChip
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_IRQDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[13e]"></a>I2C_WriteBytes</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, bsp_i2c_touch.o(i.I2C_WriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferNonBlocking
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Tmr_Delay_US
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Timeout_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>

<P><STRONG><a name="[13f]"></a>IO_Init</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, fsl_io.o(i.IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = IO_Init &rArr; LPUART_Init &rArr; LPUART_GetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetDefaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Init
</UL>

<P><STRONG><a name="[142]"></a>IO_Transfer</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, fsl_io.o(i.IO_Transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Pop
</UL>

<P><STRONG><a name="[35]"></a>LCDIF_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCDIF_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[145]"></a>LCD_BackLight_ON</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_lcd.o(i.LCD_BackLight_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_BackLight_ON &rArr; GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[165]"></a>LCD_Clear</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, bsp_lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Palette_Init
</UL>

<P><STRONG><a name="[115]"></a>LCD_DispString</STRONG> (Thumb, 96 bytes, Stack size 28 bytes, bsp_lcd.o(i.LCD_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_DispString &rArr; LCD_DisplayChar
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clear_Button
</UL>

<P><STRONG><a name="[146]"></a>LCD_DisplayChar</STRONG> (Thumb, 174 bytes, Stack size 36 bytes, bsp_lcd.o(i.LCD_DisplayChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DispString
</UL>

<P><STRONG><a name="[148]"></a>LCD_DrawCircle</STRONG> (Thumb, 162 bytes, Stack size 44 bytes, bsp_lcd.o(i.LCD_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullCircle
</UL>

<P><STRONG><a name="[119]"></a>LCD_DrawFullCircle</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, bsp_lcd.o(i.LCD_DrawFullCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LCD_DrawFullCircle &rArr; LCD_DrawCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLineCircle
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Trail
</UL>

<P><STRONG><a name="[10a]"></a>LCD_DrawFullRect</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, bsp_lcd.o(i.LCD_DrawFullRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Color_Button
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clear_Button
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Clear_Palette
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Trail
</UL>

<P><STRONG><a name="[147]"></a>LCD_DrawLine</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, bsp_lcd.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullCircle
</UL>

<P><STRONG><a name="[116]"></a>LCD_DrawRect</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, bsp_lcd.o(i.LCD_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_DrawRect &rArr; LCD_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Color_Button
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clear_Button
</UL>

<P><STRONG><a name="[117]"></a>LCD_DrawUniLine</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, bsp_lcd.o(i.LCD_DrawUniLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_DrawUniLine &rArr; PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Trail
</UL>

<P><STRONG><a name="[14b]"></a>LCD_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bsp_lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCD_Init &rArr; LCD_BackLight_ON &rArr; GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InterruptConfig
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitClock
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BackLight_ON
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IOMUXC_PAD_Config
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IOMUXC_MUX_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14d]"></a>LCD_InitClock</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_lcd.o(i.LCD_InitClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_InitClock &rArr; CLOCK_SetDiv
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitVideoPll
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[14e]"></a>LCD_InterruptConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_InterruptConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[109]"></a>LCD_SetColors</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetColors))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Color_Button
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clear_Button
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Select_Color
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Select_Brush
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Clear_Palette
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Trail
</UL>

<P><STRONG><a name="[114]"></a>LCD_SetFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clear_Button
</UL>

<P><STRONG><a name="[167]"></a>LCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Palette_Init
</UL>

<P><STRONG><a name="[151]"></a>LED_GPIO_Config</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, bsp_led.o(i.LED_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LED_GPIO_Config &rArr; GPIO_PinInit &rArr; GPIO_PinSetInterruptConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10f]"></a>LOG_Init</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, fsl_log.o(i.LOG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LOG_Init &rArr; IO_Init &rArr; LPUART_Init &rArr; LPUART_GetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[153]"></a>LOG_Pop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fsl_log.o(i.LOG_Pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LOG_Pop &rArr; IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>

<P><STRONG><a name="[113]"></a>LOG_Push</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fsl_log.o(i.LOG_Push))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LOG_Push &rArr; LOG_Pop &rArr; IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Pop
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_RelocateLog
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[c8]"></a>LPI2C1_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C1_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>LPI2C2_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C2_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>LPI2C3_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C3_DriverIRQHandler &rArr; LPI2C_CommonIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CommonIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[15b]"></a>LPI2C_CheckForBusyBus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_CheckForBusyBus))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferNonBlocking
</UL>

<P><STRONG><a name="[155]"></a>LPI2C_GetInstance</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, fsl_lpi2c.o(i.LPI2C_GetInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPI2C_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferCreateHandle
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[15e]"></a>LPI2C_MasterCheckAndClearError</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, fsl_lpi2c.o(i.LPI2C_MasterCheckAndClearError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPI2C_MasterCheckAndClearError
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_RunTransferStateMachine
</UL>

<P><STRONG><a name="[127]"></a>LPI2C_MasterGetDefaultConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterGetDefaultConfig))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_ModeInit
</UL>

<P><STRONG><a name="[128]"></a>LPI2C_MasterInit</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, fsl_lpi2c.o(i.LPI2C_MasterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LPI2C_MasterInit &rArr; LPI2C_MasterSetBaudRate
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterSetBaudRate
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetInstance
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetCyclesForWidth
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_ModeInit
</UL>

<P><STRONG><a name="[157]"></a>LPI2C_MasterSetBaudRate</STRONG> (Thumb, 212 bytes, Stack size 36 bytes, fsl_lpi2c.o(i.LPI2C_MasterSetBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LPI2C_MasterSetBaudRate
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[129]"></a>LPI2C_MasterTransferCreateHandle</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, fsl_lpi2c.o(i.LPI2C_MasterTransferCreateHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LPI2C_MasterTransferCreateHandle &rArr; LPI2C_GetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_GetInstance
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableIRQ
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_ModeInit
</UL>

<P><STRONG><a name="[e0]"></a>LPI2C_MasterTransferHandleIRQ</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, fsl_lpi2c.o(i.LPI2C_MasterTransferHandleIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LPI2C_MasterTransferHandleIRQ &rArr; LPI2C_RunTransferStateMachine &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_RunTransferStateMachine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_lpi2c.o(i.LPI2C_MasterTransferCreateHandle)
</UL>
<P><STRONG><a name="[13a]"></a>LPI2C_MasterTransferNonBlocking</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, fsl_lpi2c.o(i.LPI2C_MasterTransferNonBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPI2C_MasterTransferNonBlocking &rArr; LPI2C_InitTransferStateMachine
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_CheckForBusyBus
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_InitTransferStateMachine
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[c0]"></a>LPUART1_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART1_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>LPUART2_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART2_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>LPUART3_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART3_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>LPUART4_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART4_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>LPUART5_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART5_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>LPUART6_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART6_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>LPUART7_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART7_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>LPUART8_DriverIRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART8_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[160]"></a>LPUART_ClearStatusFlags</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, fsl_lpuart.o(i.LPUART_ClearStatusFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
</UL>

<P><STRONG><a name="[140]"></a>LPUART_GetDefaultConfig</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART_GetDefaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
</UL>

<P><STRONG><a name="[162]"></a>LPUART_GetInstance</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART_GetInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[161]"></a>LPUART_GetStatusFlags</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, fsl_lpuart.o(i.LPUART_GetStatusFlags))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ReadBlocking
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClearStatusFlags
</UL>

<P><STRONG><a name="[141]"></a>LPUART_Init</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, fsl_lpuart.o(i.LPUART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LPUART_Init &rArr; LPUART_GetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetInstance
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
</UL>

<P><STRONG><a name="[144]"></a>LPUART_ReadBlocking</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, fsl_lpuart.o(i.LPUART_ReadBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_GetStatusFlags
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_ClearStatusFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[143]"></a>LPUART_WriteBlocking</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, fsl_lpuart.o(i.LPUART_WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPUART_WriteBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Transfer
</UL>

<P><STRONG><a name="[164]"></a>Palette_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, palette.o(i.Palette_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Palette_Init &rArr; Touch_Button_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Button_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11b]"></a>PutPixel</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, bsp_lcd.o(i.PutPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Trail
</UL>

<P><STRONG><a name="[112]"></a>StrFormatPrintf</STRONG> (Thumb, 1242 bytes, Stack size 160 bytes, fsl_str.o(i.StrFormatPrintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertRadixNumToString
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertFloatRadixNumToString
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bsp_systick.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(RESET)
</UL>
<P><STRONG><a name="[169]"></a>SysTick_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_systick.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>SystemInit</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, system_mimxrt1052.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mimxrt1052.o(.text)
</UL>
<P><STRONG><a name="[16b]"></a>SystemInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_mimxrt1052.o(i.SystemInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[135]"></a>Touch_Button_Down</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, palette.o(i.Touch_Button_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_Button_Down
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Down
</UL>

<P><STRONG><a name="[166]"></a>Touch_Button_Init</STRONG> (Thumb, 658 bytes, Stack size 44 bytes, palette.o(i.Touch_Button_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Touch_Button_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Palette_Init
</UL>

<P><STRONG><a name="[137]"></a>Touch_Button_Up</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, palette.o(i.Touch_Button_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Touch_Button_Up
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Up
</UL>

<P><STRONG><a name="[16c]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[18e]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[120]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Combined_0_15_IRQHandler
</UL>

<P><STRONG><a name="[178]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[10c]"></a>__hardfp_modf</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, modf.o(i.__hardfp_modf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __hardfp_modf
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertFloatRadixNumToString
</UL>

<P><STRONG><a name="[10d]"></a>__hardfp_pow</STRONG> (Thumb, 2140 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertFloatRadixNumToString
</UL>

<P><STRONG><a name="[176]"></a>__kernel_poly</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[170]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[16e]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[174]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[171]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[175]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[18f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[190]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[191]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[16f]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[173]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[e7]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, fsl_debug_console.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = fputc &rArr; LOG_Push &rArr; LOG_Pop &rArr; IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[ac]"></a>main</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = main &rArr; GTP_TouchProcess &rArr; Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Palette_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_TouchProcess
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_ConfigMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[172]"></a>sqrt</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[106]"></a>CLOCK_GetOscFreq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fsl_clock.o(i.CLOCK_GetOscFreq))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPeriphClkFreq
</UL>

<P><STRONG><a name="[103]"></a>CLOCK_GetPeriphClkFreq</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, fsl_clock.o(i.CLOCK_GetPeriphClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetSysPfdFreq
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetPllFreq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetOscFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[163]"></a>CLOCK_ControlGate</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, fsl_lpuart.o(i.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Init
</UL>

<P><STRONG><a name="[11e]"></a>CLOCK_ControlGate</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, fsl_elcdif.o(i.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[11d]"></a>ELCDIF_GetInstance</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fsl_elcdif.o(i.ELCDIF_GetInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ELCDIF_GetInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELCDIF_RgbModeInit
</UL>

<P><STRONG><a name="[156]"></a>CLOCK_ControlGate</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, fsl_lpi2c.o(i.CLOCK_ControlGate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_ControlGate
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[159]"></a>EnableIRQ</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferCreateHandle
</UL>

<P><STRONG><a name="[154]"></a>LPI2C_CommonIRQHandler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, fsl_lpi2c.o(i.LPI2C_CommonIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPI2C_CommonIRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C3_DriverIRQHandler
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C2_DriverIRQHandler
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C1_DriverIRQHandler
</UL>

<P><STRONG><a name="[158]"></a>LPI2C_GetCyclesForWidth</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, fsl_lpi2c.o(i.LPI2C_GetCyclesForWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LPI2C_GetCyclesForWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
</UL>

<P><STRONG><a name="[15d]"></a>LPI2C_InitTransferStateMachine</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, fsl_lpi2c.o(i.LPI2C_InitTransferStateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LPI2C_InitTransferStateMachine
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferNonBlocking
</UL>

<P><STRONG><a name="[15f]"></a>LPI2C_MasterGetFifoCounts</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fsl_lpi2c.o(i.LPI2C_MasterGetFifoCounts))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_RunTransferStateMachine
</UL>

<P><STRONG><a name="[15a]"></a>LPI2C_RunTransferStateMachine</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, fsl_lpi2c.o(i.LPI2C_RunTransferStateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LPI2C_RunTransferStateMachine &rArr; LPI2C_MasterCheckAndClearError
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterCheckAndClearError
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetFifoCounts
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferHandleIRQ
</UL>

<P><STRONG><a name="[de]"></a>DbgConsole_RelocateLog</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, fsl_debug_console.o(i.DbgConsole_RelocateLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DbgConsole_RelocateLog &rArr; LOG_Push &rArr; LOG_Pop &rArr; IO_Transfer &rArr; LPUART_ReadBlocking &rArr; LPUART_ClearStatusFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOG_Push
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(i.DbgConsole_Printf)
</UL>
<P><STRONG><a name="[10b]"></a>ConvertFloatRadixNumToString</STRONG> (Thumb, 344 bytes, Stack size 56 bytes, fsl_str.o(i.ConvertFloatRadixNumToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2d
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2lz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_modf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
</UL>

<P><STRONG><a name="[10e]"></a>ConvertRadixNumToString</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, fsl_str.o(i.ConvertRadixNumToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ConvertRadixNumToString &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrFormatPrintf
</UL>

<P><STRONG><a name="[fd]"></a>CLOCK_GetDiv</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, board.o(i.CLOCK_GetDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_GetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_DebugConsoleSrcFreq
</UL>

<P><STRONG><a name="[fa]"></a>CLOCK_SetDiv</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, clock_config.o(i.CLOCK_SetDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[f7]"></a>CLOCK_SetMux</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, clock_config.o(i.CLOCK_SetMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetMux
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockRUN
</UL>

<P><STRONG><a name="[101]"></a>IOMUXC_SetPinMux</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, pin_mux.o(i.IOMUXC_SetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
</UL>

<P><STRONG><a name="[152]"></a>IOMUXC_SetPinMux</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, bsp_led.o(i.IOMUXC_SetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
</UL>

<P><STRONG><a name="[150]"></a>CLOCK_SetDiv</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_lcd.o(i.CLOCK_SetDiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_SetDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitClock
</UL>

<P><STRONG><a name="[14a]"></a>IOMUXC_SetPinMux</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, bsp_lcd.o(i.IOMUXC_SetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IOMUXC_MUX_Config
</UL>

<P><STRONG><a name="[149]"></a>LCD_IOMUXC_MUX_Config</STRONG> (Thumb, 464 bytes, Stack size 16 bytes, bsp_lcd.o(i.LCD_IOMUXC_MUX_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_IOMUXC_MUX_Config &rArr; IOMUXC_SetPinMux
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[14c]"></a>LCD_IOMUXC_PAD_Config</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_IOMUXC_PAD_Config))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[16a]"></a>SysTick_Config</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, bsp_systick.o(i.SysTick_Config))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[124]"></a>GTP_Get_Info</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, bsp_touch_gtxx.o(i.GTP_Get_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = GTP_Get_Info &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[125]"></a>GTP_I2C_Read</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, bsp_touch_gtxx.o(i.GTP_I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Test
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Get_Info
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Read_Version
</UL>

<P><STRONG><a name="[12b]"></a>GTP_I2C_Test</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_touch_gtxx.o(i.GTP_I2C_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = GTP_I2C_Test &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Init_Panel
</UL>

<P><STRONG><a name="[12c]"></a>GTP_I2C_Write</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, bsp_touch_gtxx.o(i.GTP_I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = GTP_I2C_Write &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[134]"></a>GTP_Touch_Down</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, bsp_touch_gtxx.o(i.GTP_Touch_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = GTP_Touch_Down &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Button_Down
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Trail
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[136]"></a>GTP_Touch_Up</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_touch_gtxx.o(i.GTP_Touch_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = GTP_Touch_Up &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Button_Up
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goodix_TS_Work_Func
</UL>

<P><STRONG><a name="[133]"></a>Goodix_TS_Work_Func</STRONG> (Thumb, 280 bytes, Stack size 128 bytes, bsp_touch_gtxx.o(i.Goodix_TS_Work_Func))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = Goodix_TS_Work_Func &rArr; GTP_I2C_Read &rArr; I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Up
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_Touch_Down
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_TouchProcess
</UL>

<P><STRONG><a name="[12a]"></a>I2C_Transfer</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_touch_gtxx.o(i.I2C_Transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = I2C_Transfer &rArr; I2C_WriteBytes &rArr; I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Write
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTP_I2C_Read
</UL>

<P><STRONG><a name="[126]"></a>GTP_I2C_ModeInit</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, bsp_i2c_touch.o(i.GTP_I2C_ModeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GTP_I2C_ModeInit &rArr; CLOCK_GetFreq &rArr; CLOCK_GetPeriphClkFreq &rArr; CLOCK_GetSysPfdFreq &rArr; CLOCK_GetPllFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterTransferCreateHandle
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterInit
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPI2C_MasterGetDefaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[df]"></a>I2C_Master_Callback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_i2c_touch.o(i.I2C_Master_Callback))
<BR>[Address Reference Count : 1]<UL><LI> bsp_i2c_touch.o(i.GTP_I2C_ModeInit)
</UL>
<P><STRONG><a name="[13b]"></a>I2C_Timeout_Callback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_i2c_touch.o(i.I2C_Timeout_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = I2C_Timeout_Callback &rArr; DbgConsole_Printf &rArr; StrFormatPrintf &rArr; ConvertFloatRadixNumToString &rArr; __hardfp_pow &rArr; sqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteBytes
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadBytes
</UL>

<P><STRONG><a name="[13c]"></a>IOMUXC_SetPinMux</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, bsp_i2c_touch.o(i.IOMUXC_SetPinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IOMUXC_SetPinMux
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Touch_Init
</UL>

<P><STRONG><a name="[e4]"></a>Command_Clear_Palette</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, palette.o(i.Command_Clear_Palette))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Command_Clear_Palette &rArr; LCD_DrawFullRect
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> palette.o(i.Touch_Button_Init)
</UL>
<P><STRONG><a name="[e6]"></a>Command_Select_Brush</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, palette.o(i.Command_Select_Brush))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> palette.o(i.Touch_Button_Init)
</UL>
<P><STRONG><a name="[e2]"></a>Command_Select_Color</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, palette.o(i.Command_Select_Color))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Command_Select_Color
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> palette.o(i.Touch_Button_Init)
</UL>
<P><STRONG><a name="[e3]"></a>Draw_Clear_Button</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, palette.o(i.Draw_Clear_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Draw_Clear_Button &rArr; LCD_DispString &rArr; LCD_DisplayChar
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DispString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> palette.o(i.Touch_Button_Init)
</UL>
<P><STRONG><a name="[e1]"></a>Draw_Color_Button</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, palette.o(i.Draw_Color_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Draw_Color_Button &rArr; LCD_DrawRect &rArr; LCD_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> palette.o(i.Touch_Button_Init)
</UL>
<P><STRONG><a name="[e5]"></a>Draw_Shape_Button</STRONG> (Thumb, 480 bytes, Stack size 24 bytes, palette.o(i.Draw_Shape_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Draw_Shape_Button &rArr; LCD_DrawUniLineCircle &rArr; LCD_DrawFullCircle &rArr; LCD_DrawCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetFont
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullCircle
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DispString
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLineCircle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> palette.o(i.Touch_Button_Init)
</UL>
<P><STRONG><a name="[118]"></a>LCD_DrawUniLineCircle</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, palette.o(i.LCD_DrawUniLineCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = LCD_DrawUniLineCircle &rArr; LCD_DrawFullCircle &rArr; LCD_DrawCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Shape_Button
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Trail
</UL>

<P><STRONG><a name="[16d]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
